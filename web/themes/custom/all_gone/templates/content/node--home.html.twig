{#
/**
 * @file
 * Theme override to display a node.
 *
 * Available variables:
 * - node: The node entity with limited access to object properties and methods.
 *   Only method names starting with "get", "has", or "is" and a few common
 *   methods such as "id", "label", and "bundle" are available. For example:
 *   - node.getCreatedTime() will return the node creation timestamp.
 *   - node.hasField('field_example') returns TRUE if the node bundle includes
 *     field_example. (This does not indicate the presence of a value in this
 *     field.)
 *   - node.isPublished() will return whether the node is published or not.
 *   Calling other methods, such as node.delete(), will result in an exception.
 *   See \Drupal\node\Entity\Node for a full list of public properties and
 *   methods for the node object.
 * - label: (optional) The title of the node.
 * - content: All node items. Use {{ content }} to print them all,
 *   or print a subset such as {{ content.field_example }}. Use
 *   {{ content|without('field_example') }} to temporarily suppress the printing
 *   of a given child element.
 * - author_picture: The node author user entity, rendered using the "compact"
 *   view mode.
 * - metadata: Metadata for this node.
 * - date: (optional) Themed creation date field.
 * - author_name: (optional) Themed author name field.
 * - url: Direct URL of the current node.
 * - display_submitted: Whether submission information should be displayed.
 * - attributes: HTML attributes for the containing element.
 *   The attributes.class element may contain one or more of the following
 *   classes:
 *   - node: The current template type (also known as a "theming hook").
 *   - node--type-[type]: The current node type. For example, if the node is an
 *     "Article" it would result in "node--type-article". Note that the machine
 *     name will often be in a short form of the human readable label.
 *   - node--view-mode-[view_mode]: The View Mode of the node; for example, a
 *     teaser would result in: "node--view-mode-teaser", and
 *     full: "node--view-mode-full".
 *   The following are controlled through the node publishing options.
 *   - node--promoted: Appears on nodes promoted to the front page.
 *   - node--sticky: Appears on nodes ordered above other non-sticky nodes in
 *     teaser listings.
 *   - node--unpublished: Appears on unpublished nodes visible only to site
 *     admins.
 * - title_attributes: Same as attributes, except applied to the main title
 *   tag that appears in the template.
 * - content_attributes: Same as attributes, except applied to the main
 *   content tag that appears in the template.
 * - author_attributes: Same as attributes, except applied to the author of
 *   the node tag that appears in the template.
 * - title_prefix: Additional output populated by modules, intended to be
 *   displayed in front of the main title tag that appears in the template.
 * - title_suffix: Additional output populated by modules, intended to be
 *   displayed after the main title tag that appears in the template.
 * - view_mode: View mode; for example, "teaser" or "full".
 * - teaser: Flag for the teaser state. Will be true if view_mode is 'teaser'.
 * - page: Flag for the full page state. Will be true if view_mode is 'full'.
 * - readmore: Flag for more state. Will be true if the teaser content of the
 *   node cannot hold the main body content.
 * - logged_in: Flag for authenticated user status. Will be true when the
 *   current user is a logged-in member.
 * - is_admin: Flag for admin user status. Will be true when the current user
 *   is an administrator.
 *
 * @see template_preprocess_node()
 *
 * @todo Remove the id attribute (or make it a class), because if that gets
 *   rendered twice on a page this is invalid CSS for example: two lists
 *   in different view modes.
 */
#}
{%
  set classes = [
    'node',
    'node--type-' ~ node.bundle|clean_class,
    node.isPromoted() ? 'node--promoted',
    node.isSticky() ? 'node--sticky',
    not node.isPublished() ? 'node--unpublished',
    view_mode ? 'node--view-mode-' ~ view_mode|clean_class,
  ]
%}

<section class="cmn-banner">
  {% for details in node.field_home_banner %}
        <div class="container">
          <div class="row">
            <div class="col-md-4 hero-image text-center"><img src="{{ file_url(details.getFieldCollectionItem().field_main_image.entity.uri.value) }}" alt=""></div>
            <div class="col-md-6 col-lg-5 offset-md-1 pl-4 pl-sm-3">
              <h1>{{ details.getFieldCollectionItem().field_title.value }}</h1>
              {% set desc = details.getFieldCollectionItem().field_body.value|render|striptags|trim %}
              <p>{{ desc |convert_encoding('UTF-8', 'HTML-ENTITIES') | raw }}</p>
              <a href="{{ details.getFieldCollectionItem().field_link.0.url }}" class="btn btn-primary">{{ details.getFieldCollectionItem().field_link.0.title }}</a>
            </div>
          </div>
        </div>
  {% endfor %}
</section>

<!---Home Section Starts Here--> 
<section class="zigzag-section">
  {% for details in node.field_home_section %}
      <div class="zigzag-box">
        <div class="container">
          <div class="row align-items-center">
          
          {% if details.getFieldCollectionItem().field_choose_formate.value == "rightimage" %}
            <div class="col-lg-5 col-md-6 content-box"><img src="{{ file_url(details.getFieldCollectionItem().field_icon.entity.uri.value) }}" width="46" height="46" alt="Safe-icon">
              <h3>{{ details.getFieldCollectionItem().field_title.value }}</h3>
              <p>{{ details.getFieldCollectionItem().field_description.value|raw|render|striptags }}</p>
            </div>
            <div class="col-md-6 offset-lg-1 img-box"><img src="{{ file_url(details.getFieldCollectionItem().field_main_image.entity.uri.value) }}" width="1140" height="844" alt="safe-image"></div>
          {% endif %}

          
          {% if details.getFieldCollectionItem().field_choose_formate.value == "leftimage" %}
            <div class="col-md-6 img-box"><img src="{{ file_url(details.getFieldCollectionItem().field_main_image.entity.uri.value) }}" width="1140" height="900" alt="laundry-image"></div>
            <div class="col-lg-5 col-md-6 offset-lg-1 content-box"><img src="{{ file_url(details.getFieldCollectionItem().field_icon.entity.uri.value) }}" width="45" height="45" alt="Laundry-icon">
              <h3>{{ details.getFieldCollectionItem().field_title.value }}</h3>
              <p>{{ details.getFieldCollectionItem().field_description.value|raw|render|striptags }}</p>
            </div>
          {% endif %}
          
          </div>
        </div>
      </div>
  {% endfor %}
</section>
{# <!---Home Section Ends Here--> #}

{# <!--Dog Slider Starts Here--> #}
<section class="stain-be">
  {% for details in node.field_move_slider %}
      <div class="container">
        <div class="row">
          <div class="col-12 text-center">
            <h2>{{ details.getFieldCollectionItem().field_title.value }}</h2>
            <p>{{ details.getFieldCollectionItem().field_description.value|raw|render|striptags }}</p>
          </div>
        </div>
      </div>
      <div class="stain-banner">
        <div id="beer-slider" class="beer-slider">
          <img src="{{ file_url(details.getFieldCollectionItem().field_image_after.entity.uri.value) }}" alt="After" height="600" width="1440">
          <div class="beer-reveal">
            <img src="{{ file_url(details.getFieldCollectionItem().field_main_image.entity.uri.value) }}" alt="Before" height="600" width="1440">
          </div>
        </div>
      </div>
  {% endfor %}
</section>
<!---Dog Slider Ends Here-->

<!---Testimonial Starts Here-->

{{ drupal_view('testimonial', 'block_1') }}


<!---Testimonial Ends Here--> 

<!---Our Story Section Starts Here-->
<section class="bobcat-carpet">
  {% for details in node.field_our_story %}
  <div class="container">
    <div class="row">
      <div class="col-lg-5 bobcat-left">
        <h2 class="h1">{{ details.getFieldCollectionItem().field_title.value }}</h2>
        <p>{{ details.getFieldCollectionItem().field_description.value|raw|render|striptags }}</p>
        <a href="{{ details.getFieldCollectionItem().field_link.0.url }}" class="btn btn-secondary">{{ details.getFieldCollectionItem().field_link.0.title }}</a>
      </div>
      <div class="col-lg-7 col-xl-6 ml-auto bobcat-right"><img class="img-carpet" src="{{ file_url(details.getFieldCollectionItem().field_main_image.entity.uri.value) }}" alt="Bobcat-Carpet" height="650" width="1040"></div>
    </div>
  </div>
  {% endfor %}
</section>
<!---Our Story Section Ends Here-->